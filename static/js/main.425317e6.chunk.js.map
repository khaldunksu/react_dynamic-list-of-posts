{"version":3,"sources":["Users.js","Comment.js","CommentList.js","Post.js","PostList.js","api.js","App.js","index.js"],"names":["Users","_ref","user","react_default","a","createElement","className","name","email","phone","address","street","Comment","comment","CommentList","comments","map","commentItem","src_Comment","key","id","Post","post","src_Users","title","src_CommentList","aria-hidden","body","PostList","filterPosts","postItem","src_Post","getPosts","fetch","then","response","ok","json","catch","getUsers","getComments","App","_useState","useState","_useState2","Object","slicedToArray","posts","setPosts","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","searchValue","setSearchValue","visiblePosts","filter","item","toLowerCase","includes","toConsumableArray","length","type","onChange","event","target","value","placeholder","src_PostList","onClick","_ref2","postsFromServer","usersFromServer","commentsFromServer","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","objectSpread2","find","person","userId","commentElem","postId","stop","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.425317e6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Users = ({ user }) => (\n  <div>\n    <p className=\"name\">{user.name}</p>\n    <p className=\"email\">{user.email}</p>\n    <p>{user.phone}</p>\n    <p>{user.address.street}</p>\n  </div>\n);\n\nUsers.propTypes = { user: PropTypes.arrayOf(PropTypes.object).isRequired };\n\nexport default Users;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <div className=\"comment\">\n    <div className=\"comment_name\">{comment.name}</div>\n  </div>\n);\n\nComment.propTypes\n = { comment: PropTypes.objectOf(PropTypes.string).isRequired };\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div>\n    {comments.map(commentItem => (\n      <Comment comment={commentItem} key={commentItem.id} />\n    ))}\n  </div>\n);\n\nCommentList.propTypes\n  = { comments: PropTypes.oneOfType([PropTypes.array]).isRequired };\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Users from './Users';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => (\n  <div className=\"onePost\">\n    <div className=\"content\">\n      <div className=\"header\"><Users user={post.user} /></div>\n      <div className=\"title\">{post.title}</div>\n      <div className=\"descrip\"><CommentList comments={post.comment} /></div>\n    </div>\n    <div className=\"extra content\">\n      <span>\n        <i aria-hidden=\"true\" className=\"user icon\" />\n        {post.body}\n      </span>\n    </div>\n\n  </div>\n\n);\n\nPost.propTypes = { post: PropTypes.oneOfType([PropTypes.object]).isRequired };\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ filterPosts }) => (\n  <div className=\"postList\">\n    {filterPosts.map(postItem => (<Post post={postItem} key={postItem.id} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  filterPosts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","export const getPosts\n = () => fetch('https://jsonplaceholder.typicode.com/posts')\n   .then(response => (response.ok ? response.json() : []))\n   .catch(() => []);\nexport const getUsers\n= () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => (response.ok ? response.json() : []))\n  .catch(() => []);\nexport const getComments\n= () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(response => (response.ok ? response.json() : []))\n  .catch(() => []);\n","import React, { useState } from 'react';\nimport './App.css';\nimport PostList from './PostList';\n\nimport { getPosts, getUsers, getComments } from './api';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);// пременная и функция\n  const [isLoading, setLoading] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n\n  const load = async() => {\n    setLoading(true);\n    const [postsFromServer,\n      usersFromServer,\n      commentsFromServer] = await Promise.all([\n      getPosts(),\n      getUsers(),\n      getComments(),\n    ]);\n\n    setPosts(postsFromServer.map(post => ({\n      ...post,\n      user: usersFromServer.find(person => person.id === post.userId),\n      comment: commentsFromServer\n        .filter(commentElem => commentElem.postId === post.id),\n    })));\n  };\n\n  const handleChangeValue = (event) => {\n    setSearchValue(event.target.value.toLowerCase());\n  };\n\n  const searchPosts = () => (\n    posts.filter(item => item.title.toLowerCase().includes(searchValue)\n      || item.body.toLowerCase().includes(searchValue))\n  );\n\n  const visiblePosts = searchValue ? searchPosts() : [...posts];\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"h1\">Dynamic list of posts</h1>\n      {posts.length > 0 ? (\n        <div>\n          <div className=\"ui action input\">\n            <input\n              type=\"text\"\n              onChange={handleChangeValue}\n              placeholder=\"Search...\"\n            />\n          </div>\n          <PostList filterPosts={visiblePosts} />\n        </div>\n\n      ) : (\n        <button className=\"ui positive button\" type=\"button\" onClick={load}>\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      )}\n     </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}